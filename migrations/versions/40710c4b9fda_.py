"""empty message

Revision ID: 40710c4b9fda
Revises: 
Create Date: 2019-05-01 18:35:06.909639

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '40710c4b9fda'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blacklist_tokens',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.String(length=500), nullable=False),
    sa.Column('blacklisted_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('business',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('business_name', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=100), nullable=False),
    sa.Column('contact_no', sa.String(length=20), nullable=True),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('circle',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('circle_name', sa.String(length=100), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('specie',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('specie_name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id'),
    sa.UniqueConstraint('specie_name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('password_hash', sa.String(length=100), nullable=True),
    sa.Column('contact_no', sa.String(length=20), nullable=True),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('public_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('breed',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('breed_name', sa.String(length=100), nullable=True),
    sa.Column('specie_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['specie_id'], ['specie.public_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('breed_name'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('pet',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=100), nullable=True),
    sa.Column('pet_name', sa.String(length=100), nullable=False),
    sa.Column('sex', sa.String(length=100), nullable=False),
    sa.Column('registered_on', sa.DateTime(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('user_business_rel',
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('business_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['business.public_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.public_id'], )
    )
    op.create_table('user_circle_rel',
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('circle_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['circle_id'], ['circle.public_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.public_id'], )
    )
    op.create_table('pet_kind_rel',
    sa.Column('pet_id', sa.String(), nullable=True),
    sa.Column('specie_id', sa.String(), nullable=True),
    sa.Column('breed_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['breed_id'], ['breed.public_id'], ),
    sa.ForeignKeyConstraint(['pet_id'], ['pet.public_id'], ),
    sa.ForeignKeyConstraint(['specie_id'], ['specie.public_id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pet_kind_rel')
    op.drop_table('user_circle_rel')
    op.drop_table('user_business_rel')
    op.drop_table('pet')
    op.drop_table('breed')
    op.drop_table('user')
    op.drop_table('specie')
    op.drop_table('circle')
    op.drop_table('business')
    op.drop_table('blacklist_tokens')
    # ### end Alembic commands ###
